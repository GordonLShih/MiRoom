{"version":3,"sources":["images/topImg.png","Database.js","Main.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Database","itemNum","app","initializeApp","itemStr","getAnalytics","toString","database","ref","getDatabase","useState","finalData","setFinalData","useEffect","onValue","snapshot","data","val","Main","ImagesBlock","props","className","src","num","img","itemName","price","onClick","alert","color","style","to","topImg","alt","Array","map","x","i","Cart","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wUAAe,MAA0B,mC,gCCInCA,EAAiB,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YACE,yEACFC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAwCFC,EArCE,SAACC,GAChB,IAAMC,EAAMC,YAAcZ,GAEpBa,GADYC,YAAaH,GACfD,EAAQK,YAClBC,EAAWC,YAAIC,cAAe,cAAgBL,GACpD,EAAkCM,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OANAC,qBAAU,WACRC,YAAQP,GAAU,SAACQ,GACjB,IAAMC,EAAOD,EAASE,MACtBL,EAAaI,QAEd,IACIL,G,OC+CMO,EA1DF,WACX,MAAoCR,oBAAS,GAA7C,mBACMS,GADN,UACoB,SAACC,GACnB,OACE,qBAAKC,UAAU,sBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,gBAAgBC,IAAKtB,EAASoB,EAAMG,KAAKC,MAExD,mEAAaxB,EAASoB,EAAMG,KAAKE,YACjC,uDAAWzB,EAASoB,EAAMG,KAAKG,MAA/B,OACA,wBACEL,UAAU,QACVM,QAAS,WACPC,MAAM,uBAHV,mDAaR,OACE,sBAAKP,UAAU,YAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,cAAC,IAAD,CAAQA,UAAU,SAASQ,MAAM,SACjC,mBAAGC,MAAO,CAAED,MAAO,QAAnB,qBACA,8BACE,cAAC,IAAD,CAAME,GAAG,eAAT,SACE,cAAC,IAAD,CAAgBV,UAAU,iBAAiBQ,MAAM,gBAKvD,qBAAKR,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAWC,IAAKU,EAAQC,IAAI,aAC3C,qBAAKZ,UAAU,WAAf,SACE,qDAEF,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,aAAf,SAIG,YAAIa,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OACjB,cAAClB,EAAD,CAAaI,IAAKc,EAAI,cAK9B,qBAAKhB,UAAU,eCnCNiB,G,MA5BF,WACX,OACE,sBAAKjB,UAAU,YAAf,UAGE,yBAAQA,UAAU,SAAlB,UACE,cAAC,IAAD,CAAQA,UAAU,SAASQ,MAAM,SACjC,8BACE,cAAC,IAAD,CAAME,GAAG,UAAT,SACE,mBAAGD,MAAO,CAAED,MAAO,QAAnB,yBAGJ,8BACE,cAAC,IAAD,CAAME,GAAG,eAAT,SACE,cAAC,IAAD,CAAgBV,UAAU,iBAAiBQ,MAAM,gBAKvD,qBAAKR,UAAU,iBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,uDCTKkB,EAXH,WACV,OACE,qBAAKlB,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,YCD7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed0bfe02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/topImg.6cdb505b.png\";","import React, { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase, ref, child, get, onValue } from \"firebase/database\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCbW_u6g2AJuJ2aYa7DsXJal2kwBgrB9mA\",\n  authDomain: \"miroom-25c73.firebaseapp.com\",\n  databaseURL:\n    \"https://miroom-25c73-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"miroom-25c73\",\n  storageBucket: \"miroom-25c73.appspot.com\",\n  messagingSenderId: \"106437787386\",\n  appId: \"1:106437787386:web:4abbfbb0d4cbe54f199343\",\n  measurementId: \"G-69GZJP6MMK\",\n};\n\nconst Database = (itemNum) => {\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n  const itemStr = itemNum.toString();\n  const database = ref(getDatabase(), \"MiRoom/item\" + itemStr);\n  const [finalData, setFinalData] = useState(\"\");\n  useEffect(() => {\n    onValue(database, (snapshot) => {\n      const data = snapshot.val();\n      setFinalData(data);\n    });\n  }, []);\n  return finalData;\n};\n\n// const app = initializeApp(firebaseConfig);\n// const analytics = getAnalytics(app);\n// const database = ref(getDatabase(), \"MiRoom/item1/price\");\n\n// const GetApiData = () => {\n//   const [finalData, setFinalData] = useState(\"123\");\n//   useEffect(() => {\n//     onValue(database, (snapshot) => {\n//       const data = snapshot.val();\n//       setFinalData(data);\n//     });\n//   }, []);\n\n//   return finalData;\n// };\n\n// const Database = {\n//   name: \"MiRoom\",\n//   number: \"69\",\n//   img: GetApiData(\"1\"),\n// };\n\nexport default Database;\n","import \"./Main.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BiMenu } from \"react-icons/bi\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport Select from \"react-select\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport topImg from \"./images/topImg.png\";\nimport jsonData from \"./data.json\";\nimport Database from \"./Database\";\n\nconst options = [\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nconst Main = () => {\n  const [showDetail, setShowDetail] = useState(false);\n  const ImagesBlock = (props) => {\n    return (\n      <div className=\"imageBlockContainer\">\n        <div className=\"fullImgBlock\">\n          <img className=\"imageBlockImg\" src={Database(props.num).img} />\n          {/* <label>產品名稱：{jsonData.item1.itemName}</label>*/}\n          <label>產品名稱：{Database(props.num).itemName}</label>\n          <label>價錢：{Database(props.num).price}$</label>\n          <button\n            className=\"label\"\n            onClick={() => {\n              alert(\"已加入\");\n            }}\n          >\n            加入購物車\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Container\">\n      <header className=\"Header\">\n        <BiMenu className=\"biMenu\" color=\"#fff\" />\n        <b style={{ color: \"#fff\" }}>mi.room</b>\n        <nav>\n          <Link to=\"/MiRoom/cart\">\n            <GiShoppingCart className=\"giShoppingCart\" color=\"#fff\" />\n          </Link>\n        </nav>\n        {/* <GiShoppingCart className=\"giShoppingCart\" color=\"#fff\" /> */}\n      </header>\n      <div className=\"mainBackground\">\n        <div className=\"mainBody\">\n          <img className=\"topImage\" src={topImg} alt=\"topImage\" />\n          <div className=\"midTitle\">\n            <i>Mi casa es tu casa</i>\n          </div>\n          <div className=\"horizontalLine\" />\n          <div className=\"verticalLine\" />\n          <div className=\"contentBox\">\n            {/* <ImagesBlock num={1} />\n            <ImagesBlock num={2} />\n            <ImagesBlock num={3} /> */}\n            {[...Array(3)].map((x, i) => (\n              <ImagesBlock num={i + 1} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\" />\n    </div>\n  );\n};\n\nexport default Main;\n{\n  /* <Select\n              defaultValue={selectedOption}\n              onChange={setSelectedOption}\n              options={options}\n            />\n            <button\n              onClick={() => {\n                // alert(selectedOption);\n                if (selectedOption === null) {\n                  alert(\"沒有做選擇\");\n                } else {\n                  alert(selectedOption.value);\n                }\n                // console.log(selectedOption.value);\n              }}\n            >\n              確認\n            </button> */\n}\n","import \"./Cart.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BiMenu } from \"react-icons/bi\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport Select from \"react-select\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nconst Cart = () => {\n  return (\n    <div className=\"Container\">\n      {/* <h1>This is Cart page</h1>\n      <Link to=\"/MiRoom\">Back</Link> */}\n      <header className=\"Header\">\n        <BiMenu className=\"biMenu\" color=\"#fff\" />\n        <nav>\n          <Link to=\"/MiRoom\">\n            <b style={{ color: \"#fff\" }}>mi.room</b>\n          </Link>\n        </nav>\n        <nav>\n          <Link to=\"/MiRoom/cart\">\n            <GiShoppingCart className=\"giShoppingCart\" color=\"#fff\" />\n          </Link>\n        </nav>\n        {/* <GiShoppingCart className=\"giShoppingCart\" color=\"#fff\" /> */}\n      </header>\n      <div className=\"mainBackground\">\n        <div className=\"mainBody\">\n          <h1>This is cart</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport Main from \"./Main\";\nimport Cart from \"./Cart\";\n\nconst App = () => {\n  return (\n    <div className=\"Container\">\n      <Routes>\n        <Route path=\"/MiRoom\" element={<Main />} />\n        <Route path=\"/MiRoom/cart\" element={<Cart />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}